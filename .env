# This is the name of the PostgreSQL server or host that is used to
# connect to the related SQL server. If the value is not 'localhost'
# or a specific IP address, it means that you want to connect to a
# PostgreSQL database inside a Docker network. At this point, you
# should enter the name of the database name service, e.g., 'postgres'.
# The default value is localhost.
POSTGRES_SERVER=localhost

# This is the inner PostgreSQL port that used to work with other inter
# connection services. For example, when an api service wants to work
# with a PostgreSQL database, this is done in this manner, but
# internally. Additionally, this port cannot be accessed from outside
# the Docker network. The default value is 5432.
POSTGRES_PORT=5444

# Just used for accessing from outside of containers, in dev mode
# it should avoid access outside of containers, for security issues.
POSTGRES_OUT_PORT=5444

# This is the name of the PostgreSQL database that you want to connect
# to.
POSTGRES_DB=fastapi

# This is the useranme that you want to connect via it. The default
# value is postgres.
POSTGRES_USER=postgres

# This is the password of your selected username in 'POSTGRES_USER'.
POSTGRES_PASSWORD=password123

# This secret key is used for encrypting and decrypting passwords,
# before saving it into the database.
SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7

# The specific algorithm that is used to encrypt and decrypt passwords.
# The default value is 'HS256', as a known and useful algorithm.
ALGORITHM=HS256

# This time represents being validated and accessible created token,
# before being expired. In production mode, it can usually be greater
# than in development mode. The default value is 30 minutes.
ACCESS_TOKEN_EXPIRE_MINUTES=30

# The version of the project. In development mode, it can be 'testing' or
# 'develop', but in production mode, it should be the exact version
# of projects in your Docker repository.
PROJECT_VERSION=dev

# This port usually is '80' or '443' or both, of course, in production
# mode, but in development mode, because of working on the main system
# besides your other services, it should be changed to another unused
# port number. The default value is 80.
NGINX_PORT=80

# It can be one of three values: 'development', 'staging', 'production'.
# This is just for representation on the top of FastAPI docs, to
# determine in the ongoing environment that you work on.
ENVIRONMENT=Development

# This is used for connecting to opentelementry endpoint on port 4317.
# On this port, jaeger service recieves api logs, and store them into
# its database to represent. Additionally, jaeger host is pointed to
# jaeger docker service that setup along with other services here.
OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317

# Selectg type of jaeger exporter. The default value is 'otlp'.
OTEL_TRACES_EXPORTER=otlp

# This is used for gathering system and OS metrics. If you want to
# get system metrics, you should complete this part. Anyway, the
# default value is 'none'. It means you do not want to get metrics.
OTEL_METRICS_EXPORTER=none

# Jaeger UI port that you can see all ui features after connecting to
# it is 16686. If you want to connect from outside, it is better to
# change this port to another one. Anyway, the default value is
# 16686.
JAEGER_UI_OUT_PORT=16686

# Opentelemetry port that used for recieving all api logs is 4317.
# If you want to connect from outside, it is better to change this
# port to another one. Anyway, the default value is 4317.
OTLP_GRPC_OUT_PORT=4317

# This is used for enabling opentelemetry collector.
COLLECTOR_OTLP_ENABLED=true

