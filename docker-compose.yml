services:

  fastapi-app:
    image: fastapi-app:${PROJECT_VERSION}
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi-app
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - POSTGRES_SERVER=${POSTGRES_SERVER}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
    ports:
      - "8000:8000"
    command: [ "fastapi", "run", "app/main.py", "--reload" ]
    volumes:
      - ./:/code/:ro
    depends_on:
      - postgres

  postgres:
    image: postgres:17.5-alpine
    container_name: postgres-db
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_OUT_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres-db:/var/lib/postgresql/data

  #  nginx:
  #    image: nginx:1.29.0
  #    container_name: nginx-proxy
  #    restart: unless-stopped
  #    env_file:
  #      - ./.env
  #    ports:
  #      - "${NGINX_PORT}:80"
  #    volumes:
  #      - ./nginx:/etc/nginx/conf.d
  #    depends_on:
  #      - fastapi-app

volumes:
  postgres-db:
