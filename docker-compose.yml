services:

  fastapi-app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - POSTGRES_SERVER=${POSTGRES_SERVER}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
    command: [ "fastapi", "run", "app/main.py", "--reload" ]
    volumes:
      - ./app:/code/app:ro
    depends_on:
      - postgres
      - jaeger


  postgres:
    image: postgres:17.5-alpine
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-db:/var/lib/postgresql/data


  nginx:
    image: nginx:1.29.0
    restart: unless-stopped
    env_file:
      - ./.env
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - fastapi-app


  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"
      - "4317:4317"
    environment:
      - COLLECTOR_OTLP_ENABLED=true


volumes:
  postgres-db:
