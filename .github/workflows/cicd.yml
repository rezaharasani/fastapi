name: Test and Build

on: [ push, pull_request ]

jobs:
  test:
    environment:
      name: FastAPI-Testing
    env:
      POSTGRES_SERVER: ${{secrets.POSTGRES_SERVER}}
      POSTGRES_PORT: ${{secrets.POSTGRES_PORT}}
      POSTGRES_DB: ${{secrets.POSTGRES_DB}}
      POSTGRES_USER: ${{secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    services:
      postgres:
        image: postgres:17.5-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}_test
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Upgrade pip
        run: python3 -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Test with Pytest
        run: pytest -v --disable-warnings


  build:
    runs-on: ubuntu-latest
    needs: [ test ]

    steps:
      - name: Build Docker Image
        run: echo "Building docker image based on Dockerfile
      - name: Push built image into Docker Hub repo
        run: Pushing new version of fastapi-app image into Docker hub, harasani source path.
  #    steps:
  #      - name: Login to Docker Hub
  #        uses: docker/login-action@v3
  #        with:
  #          username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  #
  #      - name: Set up Docker Buildx
  #        id: buildx
  #        uses: docker/setup-buildx-action@v3
  #
  #      - name: Validate build configuration
  #        uses: docker/build-push-action@v6
  #        with:
  #          call: check
  #
  #      - name: Build and push
  #        id: docker_build
  #        uses: docker/build-push-action@v6
  #        with:
  #          context: ./
  #          file: ./Dockerfile
  #          builder: ${{ steps.buildx.outputs.name }}
  #          push: true
  #          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-app:latest
  #          cache-from: type=local,src=/tmp/.buildx-cache
  #          cache-to: type=local,dest=/tmp/.buildx-cache
  #
  #      - name: Image digest
  #        run: echo ${{ steps.docker_build.outputs.digest }}


  deploy:
    runs-on: ubuntu-latest
    needs: [ test , build ]

    steps:
      - name: Deploy new version
        run: echo "Deploying new version of fastapi-app image in production servers."

